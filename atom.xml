<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Hexo</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://gehaoyu201.github.io/"/>
  <updated>2020-02-28T18:54:54.061Z</updated>
  <id>https://gehaoyu201.github.io/</id>
  
  <author>
    <name>葛浩宇</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Vue父子组件通信</title>
    <link href="https://gehaoyu201.github.io/2020/02/28/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/"/>
    <id>https://gehaoyu201.github.io/2020/02/28/vue%E7%BB%84%E4%BB%B6%E9%80%9A%E4%BF%A1/</id>
    <published>2020-02-27T17:25:48.000Z</published>
    <updated>2020-02-28T18:54:54.061Z</updated>
    
    <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p>学vue不得不了解的就是组件间的数据通信了（本文不讨论vuex），数据通信无非就是父传子，子传父，非父子通信，本文就讲父传子，子传父两种通信方式，把这两种吃透了，非父子通信也能手到擒来。父传子是通过props来传递数据的，子传父是通过this.$emit来实现的，具体实现请向下接着看。</p><h1 id="正文"><a href="#正文" class="headerlink" title="正文"></a>正文</h1><h2 id="原始子组件代码"><a href="#原始子组件代码" class="headerlink" title="原始子组件代码"></a>原始子组件代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div style=<span class="string">"border:1px solid black;width:400px;"</span>&gt;</span><br><span class="line">    &lt;h3&gt;我是子组件里的&lt;<span class="regexp">/h3&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button&gt;点击按钮子组件传递父组件&lt;/</span>button&gt;</span><br><span class="line">    &lt;div&gt;我是父组件传子组件显示的:我还没有值&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt; </span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;&#125;;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  components: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;&#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><h2 id="原始父组件代码"><a href="#原始父组件代码" class="headerlink" title="原始父组件代码"></a>原始父组件代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div style=<span class="string">"border:1px solid red;padding:2rem;width:500px;margin:50px auto;"</span>&gt;</span><br><span class="line">    &lt;h3&gt;我是父组件里的&lt;<span class="regexp">/h3&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;我是子组件向父组件传递的:我还没有值&lt;/</span>div&gt;</span><br><span class="line">    &lt;MyChild&gt;&lt;<span class="regexp">/MyChild&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;&#125;;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  components: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;&#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure><h2 id="网页显示效果"><a href="#网页显示效果" class="headerlink" title="网页显示效果"></a>网页显示效果</h2><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204184623866-196475017.png" alt="img"> </p><p>网页显示可以清晰的看出来父子组件的结构，父组件包裹着子组件。</p><p>首先，我们先让父组件向子组件通信吧。实现方法是在子组件通过props来接受父组件传过来的值。我们在父组件定义了一个名为data的值，在子组件标签里bind动态绑定了这个值，如下图所示</p><h2 id="父向子传递实现方法"><a href="#父向子传递实现方法" class="headerlink" title="父向子传递实现方法"></a>父向子传递实现方法</h2><p>先定义变量</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204191222182-298641195.png" alt="img"></p><p>修改MyChild标签内容</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204184931504-120272219.png" alt="img"></p><p>接着在子组件里通过props来接收，如下图</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204185002875-605875300.png" alt="img"></p><p> 这样子组件就接收到了父组件传递过来的值了，我们通过修改以下代码来看看这个值到底有没有接收到</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204185206160-1973792613.png" alt="img"></p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204185141763-1395453605.png" alt="img"></p><p> 可以看到，我们父向子通信已经实现了，接下来就是子向父通信了，这个就要使用到this.$emit方法了。通过this.$emit(“”)来自定义事件，然后在父组件中监听事件。</p><h2 id="子传父实现方法"><a href="#子传父实现方法" class="headerlink" title="子传父实现方法"></a>子传父实现方法</h2><p>在子组件中给button按钮click事件，来通过this.$emit自定义事件，并传入一个参数，具体修改代码如图：</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204185805126-986194046.png" alt="img"></p><p>在父组件中的子组件标签里，先在data里定义一个变量接收这个值，监听自定义事件，并接受这个参数赋值给定义的变量，修改代码如图：</p><p>再添加一个变量</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204191337132-255378981.png" alt="img"></p><p> 然后再修改MyChild标签</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204185849770-662323060.png" alt="img"></p><p>再在父组件的div里显示，代码如下：</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204190042066-640179204.png" alt="img"></p><p> 现在进入到浏览器中，点击子传父的按钮，结果出    来了，下图展示整个运行结果</p><p><img src="https://img2018.cnblogs.com/i-beta/1858208/201912/1858208-20191204190146614-1926393417.png" alt="img"></p><p>由此子向父，父向子通信就都完成了。</p><p>讲的可能有些乱，附上完整代码就好多了：</p><h1 id="末尾"><a href="#末尾" class="headerlink" title="末尾"></a>末尾</h1><h2 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h2><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line">Home.vue</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div style=<span class="string">"border:1px solid red;padding:2rem;width:500px;margin:50px auto;"</span>&gt;</span><br><span class="line">    &lt;h3&gt;我是父组件里的&lt;<span class="regexp">/h3&gt;</span></span><br><span class="line"><span class="regexp">    &lt;div&gt;我是子组件向父组件传递的:&#123;&#123;childData&#125;&#125;&lt;/</span>div&gt;</span><br><span class="line">    &lt;MyChild :fromFather=<span class="string">"data"</span> @ListenerChild=<span class="string">"(data)=&gt;this.childData = data"</span>&gt;&lt;<span class="regexp">/MyChild&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">import MyChild from "./</span>Child<span class="string">";</span></span><br><span class="line"><span class="string">export default &#123;</span></span><br><span class="line"><span class="string">  data() &#123;</span></span><br><span class="line"><span class="string">    return &#123;</span></span><br><span class="line"><span class="string">      data: "</span>I am your father<span class="string">",</span></span><br><span class="line"><span class="string">      childData: "</span><span class="string">"</span></span><br><span class="line"><span class="string">    &#125;;</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  components: &#123;</span></span><br><span class="line"><span class="string">    MyChild</span></span><br><span class="line"><span class="string">  &#125;,</span></span><br><span class="line"><span class="string">  methods: &#123;&#125;</span></span><br><span class="line"><span class="string">&#125;;</span></span><br><span class="line"><span class="string">&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">Child.vue</span><br><span class="line"></span><br><span class="line">&lt;template&gt;</span><br><span class="line">  &lt;div style=<span class="string">"border:1px solid black;width:400px;"</span>&gt;</span><br><span class="line">    &lt;h3&gt;我是子组件里的&lt;<span class="regexp">/h3&gt;</span></span><br><span class="line"><span class="regexp">    &lt;button @click="()=&gt;this.$emit('ListenerChild', 'I am your child')"&gt;点击按钮子组件传递父组件&lt;/</span>button&gt;</span><br><span class="line">    &lt;div&gt;我是父组件传子组件显示的:&#123;&#123;fromFather&#125;&#125;&lt;<span class="regexp">/div&gt;</span></span><br><span class="line"><span class="regexp">  &lt;/</span>div&gt;</span><br><span class="line">&lt;<span class="regexp">/template&gt;</span></span><br><span class="line"><span class="regexp"></span></span><br><span class="line"><span class="regexp">&lt;script&gt;</span></span><br><span class="line"><span class="regexp">export default &#123;</span></span><br><span class="line"><span class="regexp">  props: ["fromFather"],</span></span><br><span class="line"><span class="regexp">  data() &#123;</span></span><br><span class="line"><span class="regexp">    return &#123;&#125;;</span></span><br><span class="line"><span class="regexp">  &#125;,</span></span><br><span class="line"><span class="regexp">  components: &#123;&#125;,</span></span><br><span class="line"><span class="regexp">  methods: &#123;&#125;</span></span><br><span class="line"><span class="regexp">&#125;;</span></span><br><span class="line"><span class="regexp">&lt;/</span>script&gt;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      vue父子组件通信
    
    </summary>
    
    
    
      <category term="vue" scheme="https://gehaoyu201.github.io/tags/vue/"/>
    
  </entry>
  
</feed>
